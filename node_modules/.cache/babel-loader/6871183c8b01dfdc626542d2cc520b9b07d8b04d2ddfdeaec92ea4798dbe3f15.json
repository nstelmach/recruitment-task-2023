{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stelm\\\\recruitment-task-2023\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport \"./styles/style.css\";\nimport Content from \"./components/Content\";\nimport { getDefinitions } from \"./api/contentAPI\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState(null);\n\n  // it's worth using react query, but due to the fact that it's only fetched once, I used axios\n  useEffect(() => {\n    getDefinitions().then(response => setData(response.data)).catch(error => {\n      console.log(\"Error fetching data: \", error);\n      setError(error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: data === null || data === void 0 ? void 0 : data.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: data && /*#__PURE__*/_jsxDEV(Content, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"omZ0TtSJVe5MDbJAOOg6XG3o35A=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Content","getDefinitions","useEffect","useState","jsxDEV","_jsxDEV","App","_s","error","setError","loading","setLoading","data","setData","then","response","catch","console","log","finally","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","_c","$RefreshReg$"],"sources":["C:/Users/stelm/recruitment-task-2023/src/App.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport \"./styles/style.css\";\r\nimport Content from \"./components/Content\";\r\nimport { getDefinitions } from \"./api/contentAPI\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Layout } from \"./types/model\";\r\n\r\nexport default function App() {\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState<Layout | null>(null);\r\n\r\n  // it's worth using react query, but due to the fact that it's only fetched once, I used axios\r\n  useEffect(() => {\r\n    getDefinitions()\r\n      .then((response) => setData(response.data))\r\n      .catch((error) => {\r\n        console.log(\"Error fetching data: \", error);\r\n        setError(error);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>Error!</div>;\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <h1>{data?.title}</h1>\r\n      <div className=\"content\">{data && <Content data={data} />}</div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAO,oBAAoB;AAC3B,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC;;EAErD;EACAD,SAAS,CAAC,MAAM;IACdD,cAAc,EAAE,CACba,IAAI,CAAEC,QAAQ,IAAKF,OAAO,CAACE,QAAQ,CAACH,IAAI,CAAC,CAAC,CAC1CI,KAAK,CAAER,KAAK,IAAK;MAChBS,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEV,KAAK,CAAC;MAC3CC,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC,CAAC,CACDW,OAAO,CAAC,MAAM;MACbR,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,OAAO,EAAE,oBAAOL,OAAA;IAAAe,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAM;EACzC,IAAIhB,KAAK,EAAE,oBAAOH,OAAA;IAAAe,QAAA,EAAK;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAM;EAEnC,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,MAAM;IAAAL,QAAA,gBACnBf,OAAA;MAAAe,QAAA,EAAKR,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEc;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACtBnB,OAAA;MAAKoB,SAAS,EAAC,SAAS;MAAAL,QAAA,EAAER,IAAI,iBAAIP,OAAA,CAACL,OAAO;QAACY,IAAI,EAAEA;MAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC5D;AAEV;AAACjB,EAAA,CA3BuBD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}